# remove _PRW methods to prevent instant wake

# if _PRW objects are methods
into method label _PRW parent_adr 0x001D0000 remove_entry;
into method label _PRW parent_adr 0x001A0000 remove_entry;
into method label _PRW parent_adr 0x00140000 remove_entry;
into method label _PRW parent_adr 0x001B0000 remove_entry;
# some other LAN cards use 0x00190000
into method label _PRW parent_adr 0x00190000 remove_entry;

# if _PRW objects are names
into device name_adr 0x001D0000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\}\) remove_matched;
into device name_adr 0x001A0000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\}\) remove_matched;
into device name_adr 0x00140000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\}\) remove_matched;
into device name_adr 0x001B0000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\}\) remove_matched;
into device name_adr 0x00190000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\}\) remove_matched;

# seems to work better if _PRW is present, but returns 0 (original was 3) for sleep state
into device name_adr 0x001D0000 insert begin Name(_PRW, Package() { 0x6D, 0 }) end;
into device name_adr 0x001A0000 insert begin Name(_PRW, Package() { 0x6D, 0 }) end;
into device name_adr 0x00140000 insert begin Name(_PRW, Package() { 0x6D, 0 }) end;
into device name_adr 0x001B0000 insert begin Name(_PRW, Package() { 0x6D, 0 }) end;
into device name_adr 0x00190000 insert begin Name(_PRW, Package() { 0x6D, 0 }) end;

# rename XHC to XHC1
#into device label XHC set_label begin XHC1 end;
#into_all all code_regex XHC\. replaceall_matched begin XHC1. end;
#into_all all code_regex XHC_\. replaceall_matched begin XHC1. end;
#into_all all code_regex \.XHC, replaceall_matched begin .XHC1, end;

# rename EHC1 to EH01
into device label EHC1 set_label begin EH01 end;
into_all all code_regex EHC1\. replaceall_matched begin EH01. end;
into_all all code_regex \.EHC1, replaceall_matched begin .EH01, end;

# rename EHC2 to EH02
into device label EHC2 set_label begin EH02 end;
into_all all code_regex EHC2\. replaceall_matched begin EH02. end;
into_all all code_regex \.EHC2, replaceall_matched begin .EH02, end;

# make XSEL do nothing
into method label XSEL replace_content begin // nothing end;

into definitionblock code_regex . insert
begin
// Override for USBInjectAll.kext\n
Device(UIAC)\n
{\n
    Name(_HID, "UIA00000")\n
    Name(RMCF, Package()\n
    {\n
        // EH01 has no ports (XHCIMux not being used)\n
        "EH01", Package()\n
        {\n
            "port-count", Buffer() { 0, 0, 0, 0 },\n
            "ports", Package() { },\n
        },\n
        // XHC overrides\n
        "8086_9xxx", Package()\n
        {\n
            "port-count", Buffer() { 0x0d, 0, 0, 0},\n
            "ports", Package()\n
            {\n
                "HS01", Package() // touchscreen\n
                {\n
                    "UsbConnector", 255,\n
                    "port", Buffer() { 0x01, 0, 0, 0 },\n
                },\n
                "HS02", Package() // HS USB3 left\n
                {\n
                    "UsbConnector", 3,\n
                    "port", Buffer() { 0x02, 0, 0, 0 },\n
                },\n
                "HS03", Package() // USB2 far right\n
                {\n
                    "UsbConnector", 0,\n
                    "port", Buffer() { 0x03, 0, 0, 0 },\n
                },\n
                "HS04", Package() // USB2 near right\n
                {\n
                    "UsbConnector", 0,\n
                    "port", Buffer() { 0x04, 0, 0, 0 },\n
                },\n
                "HS05", Package() // camera\n
                {\n
                    "UsbConnector", 255,\n
                    "port", Buffer() { 0x05, 0, 0, 0 },\n
                },\n
                "HS06", Package() // bluetooth\n
                {\n
                    "UsbConnector", 255,\n
                    "port", Buffer() { 0x06, 0, 0, 0 },\n
                },\n
                "SS01", Package() // SS USB3 left\n
                {\n
                    "UsbConnector", 3,\n
                    "port", Buffer() { 0x0a, 0, 0, 0 },\n
                },\n
            },\n
        },\n
    })\n
}\n
end;

#Maintained by: RehabMan for: Laptop Patches
#usb_USB_7-series.txt

# USB property injection for 7-series boards (originally HM76)

# Insert Apple USB properties into EHC1
into method label _DSM parent_adr 0x001D0000 remove_entry;
into device name_adr 0x001D0000 insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "subsystem-id", Buffer() { 0x70, 0x72, 0x00, 0x00 },\n
        "subsystem-vendor-id", Buffer() { 0x86, 0x80, 0x00, 0x00 },\n
        "AAPL,current-available", 2100,\n
        "AAPL,current-extra", 2200,\n
        "AAPL,current-extra-in-sleep", 1600,\n
        "AAPL,device-internal", 0x02,\n
        "AAPL,max-port-current-in-sleep", 2100,\n
    })\n
}\n
end;

# Insert Apple USB properties into EHC2
into method label _DSM parent_adr 0x001A0000 remove_entry;
into device name_adr 0x001A0000 insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "subsystem-id", Buffer() { 0x70, 0x72, 0x00, 0x00 },\n
        "subsystem-vendor-id", Buffer() { 0x86, 0x80, 0x00, 0x00 },\n
        "AAPL,current-available", 2100,\n
        "AAPL,current-extra", 2200,\n
        "AAPL,current-extra-in-sleep", 1600,\n
        "AAPL,device-internal", 0x02,\n
        "AAPL,max-port-current-in-sleep", 2100,\n
    })\n
}\n
end;

# Insert Apple USB properties into USB 3.0 XHC
into method label _DSM parent_adr 0x00140000 remove_entry;
into device name_adr 0x00140000 insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "subsystem-id", Buffer() { 0x70, 0x72, 0x00, 0x00 },\n
        "subsystem-vendor-id", Buffer() { 0x86, 0x80, 0x00, 0x00 },\n
        "AAPL,current-available", 2100,\n
        "AAPL,current-extra", 2200,\n
        "AAPL,current-extra-in-sleep", 1600,\n
        "AAPL,device-internal", 0x02,\n
        "AAPL,max-port-current-in-sleep", 2100,\n
        "RM,pr2-force", Buffer() { 0xff, 0x3f, 0, 0, },\n
    })\n
}\n
end;

